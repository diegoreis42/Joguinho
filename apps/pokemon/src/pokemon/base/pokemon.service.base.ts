/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Pokemon } from "@prisma/client";

export class PokemonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count<T extends Prisma.PokemonCountArgs>(
    args: Prisma.SelectSubset<T, Prisma.PokemonCountArgs>
  ): Promise<number> {
    return this.prisma.pokemon.count(args);
  }

  async pokemonItems<T extends Prisma.PokemonFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PokemonFindManyArgs>
  ): Promise<Pokemon[]> {
    return this.prisma.pokemon.findMany(args);
  }
  async pokemon<T extends Prisma.PokemonFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PokemonFindUniqueArgs>
  ): Promise<Pokemon | null> {
    return this.prisma.pokemon.findUnique(args);
  }
  async createPokemon<T extends Prisma.PokemonCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PokemonCreateArgs>
  ): Promise<Pokemon> {
    return this.prisma.pokemon.create<T>(args);
  }
  async updatePokemon<T extends Prisma.PokemonUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PokemonUpdateArgs>
  ): Promise<Pokemon> {
    return this.prisma.pokemon.update<T>(args);
  }
  async deletePokemon<T extends Prisma.PokemonDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PokemonDeleteArgs>
  ): Promise<Pokemon> {
    return this.prisma.pokemon.delete(args);
  }
}
